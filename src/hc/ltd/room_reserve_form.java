/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hc.ltd;

import java.awt.HeadlessException;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

import java.util.Arrays;
import java.util.Date;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author obuzietter
 */
public class room_reserve_form extends javax.swing.JFrame {

    /**
     * Creates new form room_reserve_form
     */
    public room_reserve_form() {
        initComponents();
        updateRoomStatusTable();
        loadActiveUsers();
    }

    private void reset() {
        nameTF.setText("");
        phoneTF.setText("");
        idTF.setText("");
        roomTypeTF.setText("");
        roomNoTF.setText("");
        amtTF.setText("");
        spinner.setValue(1);
        paymentCombo.setSelectedIndex(0);

    }

    private void updateRoomStatusTable() {
        //roomTypeTF.removeAllItems();//problem
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "SELECT * FROM rooms";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet result = stmt.executeQuery(sql);

            DefaultTableModel table = (DefaultTableModel) roomStatusTable.getModel();
            table.setRowCount(0);
            while (result.next()) {
                if ("OPEN".equals(result.getString("room_state"))) {
                    int roomNo = result.getInt("room_no");
                    String roomType = result.getString("room_type");
                    int price = result.getInt("room_price");
                    String status = result.getString("room_state");

                    // Create an array of search results
                    Object rooms[] = {roomNo, roomType, price, status};

                    // Add the search results to the table
                    table.addRow(rooms);

                }
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        idTF = new javax.swing.JTextField();
        amtTF = new javax.swing.JTextField();
        paymentCombo = new javax.swing.JComboBox<>();
        bookBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        display_table = new javax.swing.JTable();
        refresh = new javax.swing.JButton();
        checkoutBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        roomNoTF = new javax.swing.JTextField();
        spinner = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomStatusTable = new javax.swing.JTable();
        roomTypeTF = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Room Reserve");

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel2.setText("Customer Name");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel3.setText("Phone");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel4.setText("ID Number");

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel6.setText("Room No");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel8.setText("Payment Method");

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel9.setText("No of Days");

        jLabel10.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel10.setText("Amount");

        nameTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        phoneTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        idTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        amtTF.setEditable(false);
        amtTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        paymentCombo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        paymentCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Payment Method", "MPESA", "CASH", "CARD" }));

        bookBtn.setFont(new java.awt.Font("aakar", 1, 20)); // NOI18N
        bookBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check-in.png"))); // NOI18N
        bookBtn.setText("CHECK IN");
        bookBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        bookBtn.setIconTextGap(6);
        bookBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        bookBtn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });

        display_table.setFont(new java.awt.Font("Nimbus Sans", 1, 18)); // NOI18N
        display_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "PHONE", "ROOM NO", "ROOM TYPE", "NO OF DAYS", "AMOUNT", "PAYMENT", "CHECK IN"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        display_table.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        display_table.setRowHeight(35);
        display_table.setRowMargin(5);
        display_table.setSelectionBackground(new java.awt.Color(0, 255, 255));
        display_table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        display_table.setShowGrid(false);
        display_table.setShowHorizontalLines(true);
        jScrollPane2.setViewportView(display_table);
        if (display_table.getColumnModel().getColumnCount() > 0) {
            display_table.getColumnModel().getColumn(2).setPreferredWidth(35);
            display_table.getColumnModel().getColumn(4).setPreferredWidth(35);
            display_table.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh-button.png"))); // NOI18N
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        checkoutBtn.setFont(new java.awt.Font("aakar", 1, 20)); // NOI18N
        checkoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check-out.png"))); // NOI18N
        checkoutBtn.setText("CHECK OUT");
        checkoutBtn.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        checkoutBtn.setIconTextGap(6);
        checkoutBtn.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        checkoutBtn.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel7.setText("Room Type");

        roomNoTF.setEditable(false);
        roomNoTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        roomNoTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                roomNoTFFocusGained(evt);
            }
        });
        roomNoTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomNoTFActionPerformed(evt);
            }
        });

        spinner.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        spinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerStateChanged(evt);
            }
        });

        roomStatusTable.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        roomStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROOM NO", "ROOM TYPE", "PRICE", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomStatusTable.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        roomStatusTable.setRowHeight(35);
        roomStatusTable.setSelectionBackground(new java.awt.Color(0, 255, 153));
        roomStatusTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomStatusTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomStatusTable);

        roomTypeTF.setEditable(false);
        roomTypeTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        roomTypeTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                roomTypeTFFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(roomTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(roomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(amtTF, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(paymentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(154, 154, 154)
                                .addComponent(jLabel10))
                            .addComponent(jLabel8)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(146, 146, 146)
                                .addComponent(jLabel6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(checkoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(roomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(roomTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amtTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(paymentCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(bookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addGap(14, 14, 14))
        );

        nameTF.getAccessibleContext().setAccessibleDescription("");
        phoneTF.getAccessibleContext().setAccessibleDescription("");
        idTF.getAccessibleContext().setAccessibleDescription("");
        amtTF.getAccessibleContext().setAccessibleDescription("");
        paymentCombo.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        bookRoom();
        loadActiveUsers();

    }//GEN-LAST:event_bookBtnActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        loadActiveUsers();
    }//GEN-LAST:event_refreshActionPerformed

    private void roomNoTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomNoTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomNoTFActionPerformed

    private void roomNoTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomNoTFFocusGained

    }//GEN-LAST:event_roomNoTFFocusGained

    private void spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerStateChanged

        int room_number = Integer.parseInt(roomNoTF.getText());

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "SELECT * FROM rooms WHERE room_no = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setInt(1, room_number);
            ResultSet result = stmt.executeQuery();

            if (result.next()) {

                int roomPrice = result.getInt("room_price");
                int baseValue = roomPrice;
                int days = Integer.parseInt(spinner.getValue().toString());
                int due = baseValue * days;
                amtTF.setText(String.valueOf(due));

            }

        } catch (ClassNotFoundException | NumberFormatException | SQLException e) {
            System.out.println(e);
        }


    }//GEN-LAST:event_spinnerStateChanged

    private void roomStatusTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomStatusTableMouseClicked
        loadRoomData();
    }//GEN-LAST:event_roomStatusTableMouseClicked

    private void roomTypeTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomTypeTFFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_roomTypeTFFocusGained
    private void loadRoomData() {
        DefaultTableModel model = (DefaultTableModel) roomStatusTable.getModel();
        int row = roomStatusTable.getSelectedRow();

        roomNoTF.setText(model.getValueAt(row, 0).toString());
        roomTypeTF.setText(model.getValueAt(row, 1).toString());
        amtTF.setText(model.getValueAt(row, 2).toString());
        spinner.setValue(1);
    }

    private void bookRoom() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "INSERT INTO bookings (name, phone, id_no, room_type,room_no,  no_of_days, amount, payment_method) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, nameTF.getText());
            stmt.setString(2, phoneTF.getText());
            stmt.setString(3, idTF.getText());
            stmt.setString(4, roomTypeTF.getText());
            stmt.setString(5, roomNoTF.getText());
            stmt.setObject(6, spinner.getValue());
            stmt.setInt(7, Integer.parseInt(amtTF.getText()));
            stmt.setObject(8, paymentCombo.getSelectedItem());
            stmt.executeUpdate();

            //UPDATING THE ROOM STATUS UPON MAKING RESERVATION
            String updateStatus = "UPDATE rooms SET room_state = ? WHERE room_no = ?";
            PreparedStatement updateStmt = conn.prepareStatement(updateStatus);
            updateStmt.setString(1, "BOOKED");
            updateStmt.setInt(2, Integer.parseInt(roomNoTF.getText()));
            updateStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "BOOKING SUCCESSFUL!");
            updateRoomStatusTable();
            reset();

        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e) {
            System.out.println(e);
        }
    }

    private void loadActiveUsers() {
        Date currentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd");
        String formattedDate = dateFormat.format(currentDate);

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "SELECT * FROM bookings WHERE date_format(check_in_date, '%d') = ?";
            PreparedStatement dateFilter = conn.prepareStatement(sql);
            dateFilter.setString(1, formattedDate);
            ResultSet rs = dateFilter.executeQuery();

            DefaultTableModel model = (DefaultTableModel) display_table.getModel();
            model.setRowCount(0);

            while (rs.next()) {
                String name = rs.getString("name");
                String phone = rs.getString("phone");
                String room_no = rs.getString("room_no");
                String room_type = rs.getString("room_type");
                String no_of_days = rs.getString("no_of_days");
                String amount = rs.getString("amount");
                String payment_method = rs.getString("payment_method");
                String check_in_date = rs.getString("check_in_date");
                //System.out.println(rs.getString("name"));
                Object getData[] = {name, phone, room_no, room_type, no_of_days, amount, payment_method, check_in_date};
                //System.out.println(Arrays.toString(getData));
                model.addRow(getData);
            }

        } catch (HeadlessException | ClassNotFoundException | NumberFormatException | SQLException e) {
            System.out.println(e);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
                UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel"); //kali

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(room_reserve_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(room_reserve_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(room_reserve_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(room_reserve_form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new room_reserve_form().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amtTF;
    private javax.swing.JButton bookBtn;
    private javax.swing.JButton checkoutBtn;
    private javax.swing.JTable display_table;
    private javax.swing.JTextField idTF;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTF;
    private javax.swing.JComboBox<String> paymentCombo;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField roomNoTF;
    private javax.swing.JTable roomStatusTable;
    private javax.swing.JTextField roomTypeTF;
    private javax.swing.JSpinner spinner;
    // End of variables declaration//GEN-END:variables
}
