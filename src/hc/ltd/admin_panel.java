package hc.ltd;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author obuzietter
 */
public class admin_panel extends javax.swing.JFrame {

    /**
     * Creates new form admin_panel
     */
    public admin_panel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        unameTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        passTF = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        cpassTF = new javax.swing.JPasswordField();
        jLabel13 = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        emailTF = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        roleCombo = new javax.swing.JComboBox<>();
        saveBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        saveChanges = new javax.swing.JButton();
        emailTF2 = new javax.swing.JTextField();
        idnoTF2 = new javax.swing.JTextField();
        usernameTF2 = new javax.swing.JTextField();
        fullnameTF2 = new javax.swing.JTextField();
        roleTF = new javax.swing.JTextField();
        voidUser = new javax.swing.JButton();
        searchTF = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rooms_display = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        roomTypeCombo = new javax.swing.JComboBox<>();
        roomNoTF = new javax.swing.JTextField();
        roomPriceTF = new javax.swing.JTextField();
        createRoomBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        showBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ADMIN PANEL");

        jTabbedPane2.setToolTipText("");
        jTabbedPane2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel12.setText("Full Name");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 26, -1, -1));

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel2.setText("Username");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 63, -1, -1));

        nameTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(nameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 20, 400, 25));

        unameTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(unameTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 57, 400, 25));

        jLabel15.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel15.setText("Password");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        passTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(passTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 100, 400, 25));

        jLabel16.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel16.setText("Confirm Password");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        cpassTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(cpassTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 137, 400, 25));

        jLabel13.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel13.setText("ID Number");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 184, -1, -1));

        idTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(idTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 180, 400, 25));

        jLabel18.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel18.setText("Email");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 217, -1, -1));

        emailTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jPanel1.add(emailTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 211, 400, 25));

        jLabel17.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel17.setText("Role");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 254, -1, -1));

        roleCombo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        roleCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT ROLE", "ADMIN", "MANAGER", "USER" }));
        jPanel1.add(roleCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(168, 248, 400, 25));

        saveBtn.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        saveBtn.setText("CREATE");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jPanel1.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 210, -1));

        jButton2.setText("SHOW USERS");
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(272, 446, -1, 137));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(656, 21, 870, 560));

        jTabbedPane1.addTab("CREATE USER", jPanel1);

        jLabel20.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel20.setText("Username");

        jLabel21.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel21.setText("Full Name");

        jLabel23.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel23.setText("ID Number");

        jLabel24.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel24.setText("Email");

        jLabel25.setFont(new java.awt.Font("Liberation Sans", 1, 16)); // NOI18N
        jLabel25.setText("Role");

        saveChanges.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        saveChanges.setText("SAVE");
        saveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveChangesActionPerformed(evt);
            }
        });

        emailTF2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        idnoTF2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        usernameTF2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        fullnameTF2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        roleTF.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N

        voidUser.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        voidUser.setText("DELETE");
        voidUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voidUserActionPerformed(evt);
            }
        });

        searchTF.setFont(new java.awt.Font("Lato Semibold", 0, 16)); // NOI18N

        searchBtn.setText("SEARCH");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        searchResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FULL NAME", "USERNAME", "ID NO", "EMAIL", "ROLE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchResultTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(170, 170, 170)
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(searchBtn))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel21)
                        .addGap(70, 70, 70)
                        .addComponent(fullnameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel20)
                        .addGap(68, 68, 68)
                        .addComponent(usernameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel23)
                        .addGap(65, 65, 65)
                        .addComponent(idnoTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel24)
                        .addGap(103, 103, 103)
                        .addComponent(emailTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 879, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(110, 110, 110)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(roleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(61, 61, 61)
                                        .addComponent(saveChanges, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(214, 214, 214)
                                        .addComponent(voidUser, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(fullnameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel20))
                    .addComponent(usernameTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel23))
                    .addComponent(idnoTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel24))
                    .addComponent(emailTF2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel25))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(roleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(saveChanges))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(voidUser)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                .addGap(55, 55, 55))
        );

        jTabbedPane1.addTab("MODIFY", jPanel2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 936, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 289, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        jTabbedPane2.addTab("USERS", jPanel4);

        rooms_display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ROOM NO", "ROOM TYPE", "PRICE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rooms_display.setRowHeight(35);
        jScrollPane3.setViewportView(rooms_display);

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel3.setText("ROOM NO");

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel6.setText("ROOM TYPE");

        jLabel7.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel7.setText("ROOM PRICE");

        roomTypeCombo.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        roomTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT ROOM TYPE", "STANDARD", "DELUXE" }));

        roomNoTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        roomPriceTF.setEditable(false);
        roomPriceTF.setBackground(new java.awt.Color(204, 204, 204));
        roomPriceTF.setFont(new java.awt.Font("Liberation Sans", 0, 18)); // NOI18N

        createRoomBtn.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        createRoomBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check-in.png"))); // NOI18N
        createRoomBtn.setText("SAVE & NEW");

        deleteBtn.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        deleteBtn.setText("DELETE");

        showBtn.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        showBtn.setText("SHOW ROOMS");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(48, 48, 48)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(roomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(roomPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(createRoomBtn)
                        .addGap(18, 18, 18)
                        .addComponent(deleteBtn))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(showBtn))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addComponent(jLabel6)
                .addGap(38, 38, 38)
                .addComponent(jLabel7))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(roomNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roomTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roomPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createRoomBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteBtn))
                .addGap(18, 18, 18)
                .addComponent(showBtn))
        );

        jTabbedPane2.addTab("ROOMS", jPanel5);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1225, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 720, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("REPORTS", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 998, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        createUser();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        searchUser();
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchResultTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultTableMouseClicked
        loadToForm();
    }//GEN-LAST:event_searchResultTableMouseClicked

    private void voidUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voidUserActionPerformed
        deleteUser();
    }//GEN-LAST:event_voidUserActionPerformed

    private void saveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesActionPerformed
        updateUserDetails();
    }//GEN-LAST:event_saveChangesActionPerformed

    private void createUser() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "INSERT INTO users (full_name, username, password, id_number, email, role) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, nameTF.getText());
            stmt.setString(2, unameTF.getText());
            stmt.setString(3, passTF.getText());
            stmt.setString(4, idTF.getText());
            stmt.setString(5, emailTF.getText());
            stmt.setObject(6, roleCombo.getSelectedItem());

            if (nameTF.getText().isEmpty() || unameTF.getText().isEmpty()
                    || passTF.getText().isEmpty() || idTF.getText().isEmpty()) {

                JOptionPane.showMessageDialog(this, "Check for empty fields!");

            } else if (!(passTF.getText().equals(cpassTF.getText()))) {

                JOptionPane.showMessageDialog(this, "Passwords do not match!");

            } else if (!(roleCombo.getSelectedItem().equals("ADMIN")
                    || roleCombo.getSelectedItem().equals("MANAGER")
                    || roleCombo.getSelectedItem().equals("USER"))) {

                JOptionPane.showMessageDialog(this, "No Role Selected!");

            } else {
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "USER CREATED SUCCCESSFULLY!");
                resetFields();
            }

        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.print(e);
        }
    }

    private void resetFields() {
        nameTF.setText("");
        unameTF.setText("");
        passTF.setText("");
        cpassTF.setText("");
        idTF.setText("");
        emailTF.setText("");
        roleCombo.setSelectedIndex(0);
    }

    private void searchUser() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "SELECT * FROM users where username=?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, searchTF.getText());
            ResultSet result = stmt.executeQuery();

            if (searchTF.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Enter Username to search!");
            } else if (result.next()) {
                JOptionPane.showMessageDialog(this, "Search for " + searchTF.getText() + " found");
                do {
                    // Retrieve data from the current row using getter methods
                    int id = result.getInt("id");
                    String name = result.getString("full_name");
                    String username = result.getString("username");
                    String idno = result.getString("id_number");
                    String email = result.getString("email");
                    String role = result.getString("role");

                    // Create an array of search results
                    Object searchResults[] = {id, name, username, idno, email, role};

                    // Add the search results to the table
                    DefaultTableModel table = (DefaultTableModel) searchResultTable.getModel();
                    table.setRowCount(0);
                    table.addRow(searchResults);
                } while (result.next());
            } else {
                JOptionPane.showMessageDialog(this, "Search for '" + searchTF.getText() + "' not found!");
            }
        } catch (HeadlessException | ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }
    }

    private void loadToForm() {
        int row = searchResultTable.getSelectedRow();
        fullnameTF2.setText(searchResultTable.getValueAt(row, 1).toString());
        usernameTF2.setText(searchResultTable.getValueAt(row, 2).toString());
        idnoTF2.setText(searchResultTable.getValueAt(row, 3).toString());
        emailTF2.setText(searchResultTable.getValueAt(row, 4).toString());
        roleTF.setText(searchResultTable.getValueAt(row, 5).toString());
    }

    private void deleteUser() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "DELETE FROM users WHERE username = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, usernameTF2.getText());
            int deletedUser = stmt.executeUpdate();
            if (deletedUser > 0) {
                JOptionPane.showMessageDialog(this, "USER DELETED SUCCESSFULLY!");
            } else {
                JOptionPane.showMessageDialog(this, "NO RECORDS FOUND!");
            }
        } catch (ClassNotFoundException | SQLException e) {
            System.out.print(e);
        }
    }

    private void updateUserDetails() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/HC_LTD", "root", "");
            String sql = "UPDATE users SET full_name = ?, username = ?, id_number = ?, email = ?, role = ? WHERE username = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, fullnameTF2.getText());
            stmt.setString(2, usernameTF2.getText());
            stmt.setString(3, idnoTF2.getText());
            stmt.setString(4, emailTF2.getText());
            stmt.setString(5, roleTF.getText());
            stmt.setString(6, usernameTF2.getText());
            int updatedUser = stmt.executeUpdate();
            if (updatedUser > 0) {
                JOptionPane.showMessageDialog(this, "USER UPDATED SUCCESSFULLY!");
            } else {
                JOptionPane.showMessageDialog(this, "UPDATE FAILED. CHECK PARAMETERS!");
            }
        } catch (ClassNotFoundException | SQLException e) {
            System.out.print(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_panel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_panel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField cpassTF;
    private javax.swing.JButton createRoomBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField emailTF2;
    private javax.swing.JTextField fullnameTF2;
    private javax.swing.JTextField idTF;
    private javax.swing.JTextField idnoTF2;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField nameTF;
    private javax.swing.JPasswordField passTF;
    private javax.swing.JComboBox<String> roleCombo;
    private javax.swing.JTextField roleTF;
    private javax.swing.JTextField roomNoTF;
    private javax.swing.JTextField roomPriceTF;
    private javax.swing.JComboBox<String> roomTypeCombo;
    private javax.swing.JTable rooms_display;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton saveChanges;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTable searchResultTable;
    private javax.swing.JTextField searchTF;
    private javax.swing.JButton showBtn;
    private javax.swing.JTextField unameTF;
    private javax.swing.JTextField usernameTF2;
    private javax.swing.JButton voidUser;
    // End of variables declaration//GEN-END:variables
}
